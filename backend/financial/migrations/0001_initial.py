# Generated by Django 5.2.7 on 2025-10-15 23:02

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        ("scheduling", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nome")),
                ("is_active", models.BooleanField(default=True, verbose_name="Ativo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_methods",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Método de Pagamento",
                "verbose_name_plural": "Métodos de Pagamento",
                "ordering": ["name"],
                "unique_together": {("tenant", "name")},
            },
        ),
        migrations.CreateModel(
            name="CashFlow",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField(verbose_name="Data")),
                (
                    "total_revenue",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Total de Receitas",
                    ),
                ),
                (
                    "total_expenses",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Total de Despesas",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(
                        decimal_places=2, default=0, max_digits=10, verbose_name="Saldo"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cash_flows",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fluxo de Caixa",
                "verbose_name_plural": "Fluxos de Caixa",
                "ordering": ["-date"],
                "indexes": [
                    models.Index(
                        fields=["tenant", "date"], name="financial_c_tenant__7b05bd_idx"
                    )
                ],
                "unique_together": {("tenant", "date")},
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("receita", "Receita"), ("despesa", "Despesa")],
                        max_length=10,
                        verbose_name="Tipo",
                    ),
                ),
                (
                    "description",
                    models.CharField(max_length=255, verbose_name="Descrição"),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="Valor",
                    ),
                ),
                ("date", models.DateField(verbose_name="Data")),
                ("notes", models.TextField(blank=True, verbose_name="Observações")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Criado em"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Atualizado em"),
                ),
                (
                    "appointment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transactions",
                        to="scheduling.appointment",
                        verbose_name="Agendamento",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_transactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Criado por",
                    ),
                ),
                (
                    "payment_method",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="transactions",
                        to="financial.paymentmethod",
                        verbose_name="Método de Pagamento",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="core.tenant",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transação",
                "verbose_name_plural": "Transações",
                "ordering": ["-date", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["tenant", "date"], name="financial_t_tenant__421346_idx"
                    ),
                    models.Index(
                        fields=["tenant", "type"], name="financial_t_tenant__8208d1_idx"
                    ),
                    models.Index(
                        fields=["tenant", "payment_method"],
                        name="financial_t_tenant__57aa16_idx",
                    ),
                ],
            },
        ),
    ]
