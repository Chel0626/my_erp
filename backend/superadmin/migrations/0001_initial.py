# Generated by Django 5.2.7 on 2025-10-22 19:42

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_alter_user_role'),
    ]

    operations = [
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.CharField(choices=[('free', 'Grátis'), ('basic', 'Básico'), ('professional', 'Profissional'), ('enterprise', 'Empresarial')], default='free', max_length=20, verbose_name='Plano')),
                ('status', models.CharField(choices=[('trial', 'Período de Teste'), ('active', 'Ativa'), ('suspended', 'Suspensa'), ('cancelled', 'Cancelada'), ('expired', 'Expirada')], default='trial', max_length=20, verbose_name='Status')),
                ('payment_status', models.CharField(choices=[('pending', 'Pendente'), ('paid', 'Pago'), ('overdue', 'Atrasado'), ('failed', 'Falhou')], default='pending', max_length=20, verbose_name='Status do Pagamento')),
                ('start_date', models.DateField(default=django.utils.timezone.now, verbose_name='Data de Início')),
                ('trial_end_date', models.DateField(blank=True, null=True, verbose_name='Fim do Período de Teste')),
                ('next_billing_date', models.DateField(blank=True, null=True, verbose_name='Próxima Data de Cobrança')),
                ('monthly_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Preço Mensal')),
                ('max_users', models.IntegerField(default=5, verbose_name='Máximo de Usuários')),
                ('max_appointments_per_month', models.IntegerField(default=100, verbose_name='Máximo de Agendamentos/Mês')),
                ('features', models.JSONField(blank=True, default=dict, help_text='JSON com features habilitadas: {"sms": true, "whatsapp": false, ...}', verbose_name='Recursos Habilitados')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='core.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Assinatura',
                'verbose_name_plural': 'Assinaturas',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Valor')),
                ('payment_method', models.CharField(choices=[('credit_card', 'Cartão de Crédito'), ('debit_card', 'Cartão de Débito'), ('pix', 'PIX'), ('bank_slip', 'Boleto'), ('bank_transfer', 'Transferência')], max_length=20, verbose_name='Método de Pagamento')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('processing', 'Processando'), ('paid', 'Pago'), ('failed', 'Falhou'), ('refunded', 'Reembolsado'), ('cancelled', 'Cancelado')], default='pending', max_length=20, verbose_name='Status')),
                ('reference_month', models.DateField(help_text='Mês ao qual este pagamento se refere', verbose_name='Mês de Referência')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('transaction_id', models.CharField(blank=True, help_text='ID da transação no gateway de pagamento', max_length=255, verbose_name='ID da Transação')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='superadmin.subscription', verbose_name='Assinatura')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemError',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_type', models.CharField(help_text='Ex: DatabaseError, ValidationError, APIError', max_length=100, verbose_name='Tipo de Erro')),
                ('severity', models.CharField(choices=[('low', 'Baixa'), ('medium', 'Média'), ('high', 'Alta'), ('critical', 'Crítica')], default='medium', max_length=20, verbose_name='Severidade')),
                ('status', models.CharField(choices=[('new', 'Novo'), ('investigating', 'Investigando'), ('resolved', 'Resolvido'), ('ignored', 'Ignorado')], default='new', max_length=20, verbose_name='Status')),
                ('message', models.TextField(help_text='Mensagem de erro', verbose_name='Mensagem')),
                ('stack_trace', models.TextField(blank=True, help_text='Stack trace completo do erro', verbose_name='Stack Trace')),
                ('endpoint', models.CharField(blank=True, help_text='URL ou endpoint onde o erro ocorreu', max_length=255, verbose_name='Endpoint')),
                ('user_email', models.EmailField(blank=True, help_text='Email do usuário que encontrou o erro', max_length=254, verbose_name='Email do Usuário')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Endereço IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('occurrences', models.IntegerField(default=1, help_text='Número de vezes que este erro ocorreu', verbose_name='Ocorrências')),
                ('first_seen', models.DateTimeField(auto_now_add=True, verbose_name='Primeira Ocorrência')),
                ('last_seen', models.DateTimeField(auto_now=True, verbose_name='Última Ocorrência')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Resolvido em')),
                ('resolved_by', models.CharField(blank=True, max_length=255, verbose_name='Resolvido por')),
                ('resolution_notes', models.TextField(blank=True, verbose_name='Notas de Resolução')),
                ('tenant', models.ForeignKey(blank=True, help_text='Deixe em branco para erros do sistema global', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='errors', to='core.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Erro do Sistema',
                'verbose_name_plural': 'Erros do Sistema',
                'ordering': ['-last_seen'],
                'indexes': [models.Index(fields=['-last_seen'], name='superadmin__last_se_e4cfef_idx'), models.Index(fields=['severity', 'status'], name='superadmin__severit_13dd84_idx')],
            },
        ),
        migrations.CreateModel(
            name='TenantUsageStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField(help_text='Primeiro dia do mês de referência', verbose_name='Mês')),
                ('total_users', models.IntegerField(default=0, verbose_name='Total de Usuários')),
                ('active_users', models.IntegerField(default=0, help_text='Usuários que fizeram login no mês', verbose_name='Usuários Ativos')),
                ('total_appointments', models.IntegerField(default=0, verbose_name='Total de Agendamentos')),
                ('completed_appointments', models.IntegerField(default=0, verbose_name='Agendamentos Concluídos')),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Receita Total')),
                ('total_customers', models.IntegerField(default=0, verbose_name='Total de Clientes')),
                ('new_customers', models.IntegerField(default=0, verbose_name='Novos Clientes')),
                ('api_calls', models.IntegerField(default=0, help_text='Total de chamadas à API no mês', verbose_name='Chamadas de API')),
                ('storage_used_mb', models.FloatField(default=0.0, help_text='Espaço em disco utilizado em MB', verbose_name='Armazenamento (MB)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_stats', to='core.tenant', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Estatística de Uso',
                'verbose_name_plural': 'Estatísticas de Uso',
                'ordering': ['-month'],
                'unique_together': {('tenant', 'month')},
            },
        ),
    ]
