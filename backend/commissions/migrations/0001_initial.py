# Generated by Django 5.2.7 on 2025-10-16 23:45

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        ("scheduling", "0002_appointment_customer_appointment_price_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CommissionRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "commission_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Commission percentage (0-100)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.00")),
                            django.core.validators.MaxValueValidator(Decimal("100.00")),
                        ],
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this rule is currently active"
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=0,
                        help_text="Priority when multiple rules apply (higher = higher priority)",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "professional",
                    models.ForeignKey(
                        blank=True,
                        help_text="Specific professional (null = applies to all professionals)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="commission_rules",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        blank=True,
                        help_text="Specific service (null = applies to all services)",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="commission_rules",
                        to="scheduling.service",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.tenant",
                        verbose_name="Empresa",
                    ),
                ),
            ],
            options={
                "verbose_name": "Commission Rule",
                "verbose_name_plural": "Commission Rules",
                "db_table": "commission_rules",
                "ordering": ["-priority", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Commission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Price of service at time of commission",
                        max_digits=10,
                    ),
                ),
                (
                    "commission_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Commission percentage applied",
                        max_digits=5,
                    ),
                ),
                (
                    "commission_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Calculated commission amount",
                        max_digits=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("paid", "Paid"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("date", models.DateField(help_text="Date when commission was earned")),
                (
                    "paid_at",
                    models.DateTimeField(
                        blank=True, help_text="When this commission was paid", null=True
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Additional notes about this commission"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "appointment",
                    models.ForeignKey(
                        help_text="Related appointment",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="commissions",
                        to="scheduling.appointment",
                    ),
                ),
                (
                    "paid_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who marked this commission as paid",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="commissions_paid",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "professional",
                    models.ForeignKey(
                        help_text="Professional who earned this commission",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="commissions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        help_text="Service provided",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="commissions",
                        to="scheduling.service",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_set",
                        to="core.tenant",
                        verbose_name="Empresa",
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        blank=True,
                        help_text="Commission rule used to calculate this commission",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="commissions",
                        to="commissions.commissionrule",
                    ),
                ),
            ],
            options={
                "verbose_name": "Commission",
                "verbose_name_plural": "Commissions",
                "db_table": "commissions",
                "ordering": ["-date", "-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="commissionrule",
            index=models.Index(
                fields=["tenant", "is_active"], name="commission__tenant__dc5cb0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="commissionrule",
            index=models.Index(
                fields=["tenant", "professional"], name="commission__tenant__7809b8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="commissionrule",
            index=models.Index(
                fields=["tenant", "service"], name="commission__tenant__b874c7_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="commissionrule",
            constraint=models.UniqueConstraint(
                fields=("tenant", "professional", "service"),
                name="unique_commission_rule_per_tenant",
            ),
        ),
        migrations.AddIndex(
            model_name="commission",
            index=models.Index(
                fields=["tenant", "professional", "status"],
                name="commissions_tenant__731b1a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="commission",
            index=models.Index(
                fields=["tenant", "status", "date"],
                name="commissions_tenant__d5a0de_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="commission",
            index=models.Index(
                fields=["tenant", "appointment"], name="commissions_tenant__ae12c8_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="commission",
            constraint=models.UniqueConstraint(
                fields=("tenant", "appointment", "service"),
                name="unique_commission_per_appointment_service",
            ),
        ),
    ]
